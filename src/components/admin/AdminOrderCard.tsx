import { motion } from "framer-motion";
import { useState } from "react";
import { ArtOrder, OrderStatus } from "@/types";
import { formatDate, getStatusColor, getStatusIcon } from "@/utils/orderUtils";

interface AdminOrderCardProps {
  order: ArtOrder;
  onStatusChange: (
    orderId: string,
    status: OrderStatus,
    comment?: string
  ) => void;
  onDeleteOrder: (orderId: string) => void;
}

export function AdminOrderCard({
  order,
  onStatusChange,
  onDeleteOrder,
}: AdminOrderCardProps) {
  const [isChangingStatus, setIsChangingStatus] = useState(false);
  const [selectedStatus, setSelectedStatus] = useState<OrderStatus>(
    order.status || "–Ω–æ–≤—ã–π"
  );
  const [comment, setComment] = useState("");
  const [showDetails, setShowDetails] = useState(false);
  const [showStatusChanger, setShowStatusChanger] = useState(false);

  const handleStatusChange = async () => {
    if (selectedStatus === "–æ—Ç–º–µ–Ω–µ–Ω" && !comment.trim()) {
      alert("–ü—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞–∫–∞–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π");
      return;
    }

    setIsChangingStatus(true);
    try {
      await onStatusChange(order.id!, selectedStatus, comment);
      setComment("");
      setShowStatusChanger(false);
    } finally {
      setIsChangingStatus(false);
    }
  };

  const statusOptions: OrderStatus[] = [
    "–Ω–æ–≤—ã–π",
    "–≤ —Ä–∞–±–æ—Ç–µ",
    "–≤—ã–ø–æ–ª–Ω–µ–Ω",
    "–æ—Ç–º–µ–Ω–µ–Ω",
  ];

  const getStatusGradient = (status: string) => {
    switch (status) {
      case "–Ω–æ–≤—ã–π":
        return "from-blue-500/20 to-blue-600/20 border-blue-500/30";
      case "–≤ —Ä–∞–±–æ—Ç–µ":
        return "from-yellow-500/20 to-orange-600/20 border-yellow-500/30";
      case "–≤—ã–ø–æ–ª–Ω–µ–Ω":
        return "from-green-500/20 to-emerald-600/20 border-green-500/30";
      case "–æ—Ç–º–µ–Ω–µ–Ω":
        return "from-red-500/20 to-red-600/20 border-red-500/30";
      default:
        return "from-gray-500/20 to-gray-600/20 border-gray-500/30";
    }
  };

  return (
    <motion.div
      layout
      className="glass-ultra p-6 hover-lift"
      whileHover={{ scale: 1.02 }}
      transition={{ type: "spring", damping: 20 }}
    >
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
      <div className="flex justify-between items-start mb-4">
        <div>
          <h3 className="text-xl font-semibold text-white mb-1">
            {getStatusIcon(order.status || "–Ω–æ–≤—ã–π")} –ó–∞–∫–∞–∑ {order.orderNumber}
          </h3>
          <p className="text-sm text-gray-400">
            {order.createdAt && formatDate(order.createdAt)}
          </p>
        </div>
        <div
          className={`px-4 py-2 rounded-full text-sm font-medium bg-gradient-to-r ${getStatusGradient(
            order.status || "–Ω–æ–≤—ã–π"
          )} border backdrop-blur-sm`}
        >
          {order.status}
        </div>
      </div>
      {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">        <div className="space-y-3">
          <div>
            <p className="text-sm font-medium text-gray-400">üë§ –ö–ª–∏–µ–Ω—Ç</p>
            <p className="text-white font-medium">{order.name}</p>
            {order.telegramUsername && (
              <p className="text-sm text-blue-400">@{order.telegramUsername}</p>
            )}
          </div>
          <div>
            <p className="text-sm font-medium text-gray-400">üí∞ –¶–µ–Ω–∞</p>
            <p className="text-white font-medium">{order.desiredPrice}</p>
          </div>
        </div>
        <div className="space-y-3">
          <div>
            <p className="text-sm font-medium text-gray-400">üìÖ –î–µ–¥–ª–∞–π–Ω</p>
            <p className="text-white font-medium">{order.deadline}</p>
          </div>
          <div>
            <p className="text-sm font-medium text-gray-400">üë• –ü–µ—Ä—Å–æ–Ω–∞–∂–∏</p>
            <p className="text-white font-medium">{order.charactersCount}</p>
          </div>
        </div>
      </div>
      {/* –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–¥–µ–∏ */}
      <div className="mb-4">
        <p className="text-sm font-medium text-gray-400 mb-2">üí° –ò–¥–µ—è</p>
        <p className="text-gray-300 line-clamp-2 bg-black/30 p-3 rounded-lg border border-gray-700/50">
          {order.idea}
        </p>
      </div>{" "}
      {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
      <div className="flex flex-wrap gap-3 mb-4">
        <motion.button
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
          onClick={() => setShowDetails(!showDetails)}
          className="px-4 py-2 bg-gradient-to-r from-purple-500/20 to-pink-500/20 border border-purple-500/30 text-purple-300 rounded-lg hover:from-purple-500/30 hover:to-pink-500/30 transition-all duration-300 backdrop-blur-sm"
        >
          {showDetails ? "üîº –°–∫—Ä—ã—Ç—å –¥–µ—Ç–∞–ª–∏" : "üîΩ –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏"}
        </motion.button>

        <motion.button
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
          onClick={() => setShowStatusChanger(!showStatusChanger)}
          className="px-4 py-2 bg-gradient-to-r from-blue-500/20 to-cyan-500/20 border border-blue-500/30 text-blue-300 rounded-lg hover:from-blue-500/30 hover:to-cyan-500/30 transition-all duration-300 backdrop-blur-sm"
        >
          ‚öôÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å
        </motion.button>

        <motion.button
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
          onClick={() => onDeleteOrder(order.id!)}
          className="px-4 py-2 bg-gradient-to-r from-red-500/20 to-red-600/20 border border-red-500/30 text-red-300 rounded-lg hover:from-red-500/30 hover:to-red-600/30 transition-all duration-300 backdrop-blur-sm"
        >
          üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑
        </motion.button>
      </div>
      {/* –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      {showDetails && (
        <motion.div
          initial={{ opacity: 0, height: 0 }}
          animate={{ opacity: 1, height: "auto" }}
          exit={{ opacity: 0, height: 0 }}
          className="border-t border-gray-700/50 pt-4 space-y-4"
        >
          <div>
            <p className="text-sm font-medium text-gray-400 mb-2">
              üìù –ü–æ–ª–Ω–∞—è –∏–¥–µ—è
            </p>
            <p className="text-gray-300 whitespace-pre-wrap bg-black/30 p-4 rounded-lg border border-gray-700/50">
              {order.idea}
            </p>
          </div>

          {order.references && (
            <div>
              <p className="text-sm font-medium text-gray-400 mb-2">
                üñºÔ∏è –†–µ—Ñ–µ—Ä–µ–Ω—Å—ã
              </p>
              <p className="text-gray-300 whitespace-pre-wrap bg-black/30 p-4 rounded-lg border border-gray-700/50">
                {order.references}
              </p>
            </div>
          )}

          {order.additionalWishes && (
            <div>
              <p className="text-sm font-medium text-gray-400 mb-2">
                ‚ú® –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è
              </p>
              <p className="text-gray-300 whitespace-pre-wrap bg-black/30 p-4 rounded-lg border border-gray-700/50">
                {order.additionalWishes}
              </p>
            </div>
          )}

          {order.contactInfo && (
            <div>
              <p className="text-sm font-medium text-gray-400 mb-2">
                üì± –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
              </p>
              <p className="text-gray-300 bg-black/30 p-4 rounded-lg border border-gray-700/50">
                {order.contactInfo}
              </p>
            </div>
          )}

          {order.adminComment && (
            <div>
              <p className="text-sm font-medium text-gray-400 mb-2">
                üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
              </p>
              <p className="text-gray-300 whitespace-pre-wrap bg-red-500/10 p-4 rounded-lg border border-red-500/30">
                {order.adminComment}
              </p>
            </div>
          )}          {order.telegramUserId && (
            <div>
              <p className="text-sm font-medium text-gray-400 mb-2">
                ü§ñ Telegram
              </p>
              <div className="text-gray-300 bg-black/30 p-4 rounded-lg border border-gray-700/50">
                <p className="font-mono">ID: {order.telegramUserId}</p>
                {order.telegramUsername && (
                  <p className="text-blue-400">@{order.telegramUsername}</p>
                )}
              </div>
            </div>
          )}
        </motion.div>
      )}
      {/* –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ */}
      {showStatusChanger && (
        <motion.div
          initial={{ opacity: 0, height: 0 }}
          animate={{ opacity: 1, height: "auto" }}
          exit={{ opacity: 0, height: 0 }}
          className="border-t border-gray-700/50 pt-4"
        >
          <p className="text-sm font-medium text-gray-400 mb-4">
            ‚öôÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
          </p>

          <div className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-400 mb-2">
                –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
              </label>
              <select
                value={selectedStatus}
                onChange={(e) =>
                  setSelectedStatus(e.target.value as OrderStatus)
                }
                className="w-full px-4 py-3 bg-black/50 border border-gray-600 rounded-xl text-white focus:border-purple-500 focus:ring-2 focus:ring-purple-500/20 transition-all duration-300"
                disabled={isChangingStatus}
              >
                {statusOptions.map((status) => (
                  <option key={status} value={status}>
                    {getStatusIcon(status)} {status}
                  </option>
                ))}
              </select>
            </div>

            {selectedStatus === "–æ—Ç–º–µ–Ω–µ–Ω" && (
              <div>
                <label className="block text-sm font-medium text-gray-400 mb-2">
                  –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞{" "}
                  <span className="text-red-400">(–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</span>
                </label>
                <textarea
                  value={comment}
                  onChange={(e) => setComment(e.target.value)}
                  placeholder="–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–º–µ–Ω—ã –∑–∞–∫–∞–∑–∞..."
                  className="w-full px-4 py-3 bg-black/50 border border-gray-600 rounded-xl text-white placeholder-gray-500 focus:border-purple-500 focus:ring-2 focus:ring-purple-500/20 transition-all duration-300"
                  rows={3}
                  disabled={isChangingStatus}
                />
              </div>
            )}

            <div className="flex gap-3">
              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                onClick={handleStatusChange}
                disabled={isChangingStatus || selectedStatus === order.status}
                className="px-6 py-3 bg-gradient-to-r from-green-500 to-emerald-500 text-white rounded-xl hover:from-green-600 hover:to-emerald-600 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-300 font-medium"
              >
                {isChangingStatus ? (
                  <div className="flex items-center">
                    <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è...
                  </div>
                ) : (
                  "‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å"
                )}
              </motion.button>

              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                onClick={() => {
                  setShowStatusChanger(false);
                  setSelectedStatus(order.status || "–Ω–æ–≤—ã–π");
                  setComment("");
                }}
                className="px-6 py-3 bg-gradient-to-r from-gray-500/20 to-gray-600/20 border border-gray-500/30 text-gray-300 rounded-xl hover:from-gray-500/30 hover:to-gray-600/30 transition-all duration-300 backdrop-blur-sm"
              >
                ‚ùå –û—Ç–º–µ–Ω–∞
              </motion.button>
            </div>
          </div>
        </motion.div>
      )}
    </motion.div>
  );
}
