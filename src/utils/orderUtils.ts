/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ AB12CD34
 */
export function generateOrderNumber(): string {
  const chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
  const numbers = "0123456789";

  let result = "";

  // 2 –±—É–∫–≤—ã
  for (let i = 0; i < 2; i++) {
    result += chars.charAt(Math.floor(Math.random() * chars.length));
  }

  // 2 —Ü–∏—Ñ—Ä—ã
  for (let i = 0; i < 2; i++) {
    result += numbers.charAt(Math.floor(Math.random() * numbers.length));
  }

  // 2 –±—É–∫–≤—ã
  for (let i = 0; i < 2; i++) {
    result += chars.charAt(Math.floor(Math.random() * chars.length));
  }

  // 2 —Ü–∏—Ñ—Ä—ã
  for (let i = 0; i < 2; i++) {
    result += numbers.charAt(Math.floor(Math.random() * numbers.length));
  }

  return result;
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */
export function formatDate(date: Date | string): string {
  const d = new Date(date);
  return d.toLocaleDateString("ru-RU", {
    year: "numeric",
    month: "long",
    day: "numeric",
    hour: "2-digit",
    minute: "2-digit",
  });
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Ü–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è UI
 */
export function getStatusColor(status: string): string {
  switch (status) {
    case "–Ω–æ–≤—ã–π":
      return "bg-blue-100 text-blue-800";
    case "–≤ —Ä–∞–±–æ—Ç–µ":
      return "bg-yellow-100 text-yellow-800";
    case "–≤—ã–ø–æ–ª–Ω–µ–Ω":
      return "bg-green-100 text-green-800";
    case "–æ—Ç–º–µ–Ω–µ–Ω":
      return "bg-red-100 text-red-800";
    default:
      return "bg-gray-100 text-gray-800";
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–∫–æ–Ω–∫—É —Å—Ç–∞—Ç—É—Å–∞
 */
export function getStatusIcon(status: string): string {
  switch (status) {
    case "–Ω–æ–≤—ã–π":
      return "üÜï";
    case "–≤ —Ä–∞–±–æ—Ç–µ":
      return "‚è≥";
    case "–≤—ã–ø–æ–ª–Ω–µ–Ω":
      return "‚úÖ";
    case "–æ—Ç–º–µ–Ω–µ–Ω":
      return "‚ùå";
    default:
      return "üìã";
  }
}
